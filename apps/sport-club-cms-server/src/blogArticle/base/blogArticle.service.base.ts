/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BlogArticle as PrismaBlogArticle } from "@prisma/client";

export class BlogArticleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BlogArticleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.blogArticle.count(args);
  }

  async blogArticles(
    args: Prisma.BlogArticleFindManyArgs
  ): Promise<PrismaBlogArticle[]> {
    return this.prisma.blogArticle.findMany(args);
  }
  async blogArticle(
    args: Prisma.BlogArticleFindUniqueArgs
  ): Promise<PrismaBlogArticle | null> {
    return this.prisma.blogArticle.findUnique(args);
  }
  async createBlogArticle(
    args: Prisma.BlogArticleCreateArgs
  ): Promise<PrismaBlogArticle> {
    return this.prisma.blogArticle.create(args);
  }
  async updateBlogArticle(
    args: Prisma.BlogArticleUpdateArgs
  ): Promise<PrismaBlogArticle> {
    return this.prisma.blogArticle.update(args);
  }
  async deleteBlogArticle(
    args: Prisma.BlogArticleDeleteArgs
  ): Promise<PrismaBlogArticle> {
    return this.prisma.blogArticle.delete(args);
  }
}
